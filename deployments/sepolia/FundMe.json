{
  "address": "0xE827d061074E6818Fe4F866afF2fb60B56cFd227",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xef7d07017729b5288cc92b1f57ba514f972c42c4a2cb3ec7d04cd517e992f408",
  "receipt": {
    "to": null,
    "from": "0xc99EA0942e66c1F1a48dDA9E5a3a898e5e001b77",
    "contractAddress": "0xE827d061074E6818Fe4F866afF2fb60B56cFd227",
    "transactionIndex": 85,
    "gasUsed": "1033250",
    "logsBloom": "0x
    "blockHash": "0x2341dfcc399fcb4d0c7012e33d4d793f3d5d2a9331db7ee492fb5ac0f7244aa9",
    "transactionHash": "0xef7d07017729b5288cc92b1f57ba514f972c42c4a2cb3ec7d04cd517e992f408",
    "logs": [],
    "blockNumber": 5082390,
    "cumulativeGasUsed": "5894664",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "2389166a79537a7498bcba0149955198",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"this functions funds this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n/* functions order:\\n    constructor\\n    receive\\n    fallback\\n    external\\n    public\\n    internal\\n    private\\n    view / pure\\n*/\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    // Saving into bytecode of the contract instead of storage\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == owner, \\\"Sender is not owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address _priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(_priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    // Want to be able to set a minimum fund amount in USD\\n    // 1. How do we send ETH to this contract?\\n\\n    /**\\n     *   @notice this functions funds this contract\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        ); // 1e18 = 1 * 10 ** 18\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] =\\n            s_addressToAmountFunded[msg.sender] +\\n            msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            address funder = s_funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // reset the array\\n        s_funders = new address[](0);\\n\\n        // transfer\\n        //payable(msg.sender).transfer(address(this).balance);\\n\\n        // send\\n        //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess, \\\"Send failed\\\");\\n\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Cheaper\\n    function withdrawV2() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n\\n        require(success, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address _address\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[_address];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x4b66353495c981e00676431900a4a80ae0f43092122a741cae40577a77329b52\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface _priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = _priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface _priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(_priceFeed);\\n        uint256 ethPriceInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethPriceInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xc9b183dcbe7da9f01069aa80ec79d697b380ff87d344c41dfc128d833241816c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012d2380380620012d283398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161115262000180600039600081816103e501528181610634015281816106cb01526108c101526111526000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461014d5780639e87a5cd14610178578063b60d4288146101a3578063d7b4750c146101ad578063fd4e822e146101ea57610099565b80630343fb25146100a35780630ec3b027146100e05780633ccfd60b1461010b5780636b69a5921461012257610099565b3661009957610097610201565b005b6100a1610201565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b64565b610374565b6040516100d79190610baa565b60405180910390f35b3480156100ec57600080fd5b506100f56103bd565b6040516101029190610c24565b60405180910390f35b34801561011757600080fd5b506101206103e3565b005b34801561012e57600080fd5b50610137610623565b6040516101449190610baa565b60405180910390f35b34801561015957600080fd5b50610162610630565b60405161016f9190610c4e565b60405180910390f35b34801561018457600080fd5b5061018d610658565b60405161019a9190610c24565b60405180910390f35b6101ab610201565b005b3480156101b957600080fd5b506101d460048036038101906101cf9190610c95565b610682565b6040516101e19190610c4e565b60405180910390f35b3480156101f657600080fd5b506101ff6106c9565b005b6802b5e3af16b1880000610240600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461098d90919063ffffffff16565b1015610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610d1f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461032f9190610d6e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610468576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561051357600080828154811061048d5761048c610da2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061050b90610dd1565b91505061046b565b50600067ffffffffffffffff81111561052f5761052e610e19565b5b60405190808252806020026020018201604052801561055d5781602001602082028036833780820191505090505b5060009080519060200190610573929190610a5a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161059a90610e79565b60006040518083038185875af1925050503d80600081146105d7576040519150601f19603f3d011682016040523d82523d6000602084013e6105dc565b606091505b5050905080610620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061790610eda565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061069757610696610da2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107d157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610787575b5050505050905060005b815181101561085c5760008282815181106107f9576107f8610da2565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061085490610dd1565b9150506107db565b50600067ffffffffffffffff81111561087857610877610e19565b5b6040519080825280602002602001820160405280156108a65781602001602082028036833780820191505090505b50600090805190602001906108bc929190610a5a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161090390610e79565b60006040518083038185875af1925050503d8060008114610940576040519150601f19603f3d011682016040523d82523d6000602084013e610945565b606091505b5050905080610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098090610eda565b60405180910390fd5b5050565b600080610999836109c9565b90506000670de0b6b3a764000085836109b29190610efa565b6109bc9190610f6b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3b9190611029565b5050509150506402540be40081610a5291906110a4565b915050919050565b828054828255906000526020600020908101928215610ad3579160200282015b82811115610ad25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a7a565b5b509050610ae09190610ae4565b5090565b5b80821115610afd576000816000905550600101610ae5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b3182610b06565b9050919050565b610b4181610b26565b8114610b4c57600080fd5b50565b600081359050610b5e81610b38565b92915050565b600060208284031215610b7a57610b79610b01565b5b6000610b8884828501610b4f565b91505092915050565b6000819050919050565b610ba481610b91565b82525050565b6000602082019050610bbf6000830184610b9b565b92915050565b6000819050919050565b6000610bea610be5610be084610b06565b610bc5565b610b06565b9050919050565b6000610bfc82610bcf565b9050919050565b6000610c0e82610bf1565b9050919050565b610c1e81610c03565b82525050565b6000602082019050610c396000830184610c15565b92915050565b610c4881610b26565b82525050565b6000602082019050610c636000830184610c3f565b92915050565b610c7281610b91565b8114610c7d57600080fd5b50565b600081359050610c8f81610c69565b92915050565b600060208284031215610cab57610caa610b01565b5b6000610cb984828501610c80565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610d09601383610cc2565b9150610d1482610cd3565b602082019050919050565b60006020820190508181036000830152610d3881610cfc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d7982610b91565b9150610d8483610b91565b9250828201905080821115610d9c57610d9b610d3f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ddc82610b91565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e0e57610e0d610d3f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e63600083610e48565b9150610e6e82610e53565b600082019050919050565b6000610e8482610e56565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ec4600b83610cc2565b9150610ecf82610e8e565b602082019050919050565b60006020820190508181036000830152610ef381610eb7565b9050919050565b6000610f0582610b91565b9150610f1083610b91565b9250828202610f1e81610b91565b91508282048414831517610f3557610f34610d3f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7682610b91565b9150610f8183610b91565b925082610f9157610f90610f3c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fbb81610f9c565b8114610fc657600080fd5b50565b600081519050610fd881610fb2565b92915050565b6000819050919050565b610ff181610fde565b8114610ffc57600080fd5b50565b60008151905061100e81610fe8565b92915050565b60008151905061102381610c69565b92915050565b600080600080600060a0868803121561104557611044610b01565b5b600061105388828901610fc9565b955050602061106488828901610fff565b945050604061107588828901611014565b935050606061108688828901611014565b925050608061109788828901610fc9565b9150509295509295909350565b60006110af82610fde565b91506110ba83610fde565b92508282026110c881610fde565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615611100576110ff610d3f565b5b828205841483151761111557611114610d3f565b5b509291505056fea2646970667358221220ee0027e09a13012c287dadaf240ef92425c717d767ecd8e3b6e61a36347083e664736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461014d5780639e87a5cd14610178578063b60d4288146101a3578063d7b4750c146101ad578063fd4e822e146101ea57610099565b80630343fb25146100a35780630ec3b027146100e05780633ccfd60b1461010b5780636b69a5921461012257610099565b3661009957610097610201565b005b6100a1610201565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b64565b610374565b6040516100d79190610baa565b60405180910390f35b3480156100ec57600080fd5b506100f56103bd565b6040516101029190610c24565b60405180910390f35b34801561011757600080fd5b506101206103e3565b005b34801561012e57600080fd5b50610137610623565b6040516101449190610baa565b60405180910390f35b34801561015957600080fd5b50610162610630565b60405161016f9190610c4e565b60405180910390f35b34801561018457600080fd5b5061018d610658565b60405161019a9190610c24565b60405180910390f35b6101ab610201565b005b3480156101b957600080fd5b506101d460048036038101906101cf9190610c95565b610682565b6040516101e19190610c4e565b60405180910390f35b3480156101f657600080fd5b506101ff6106c9565b005b6802b5e3af16b1880000610240600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461098d90919063ffffffff16565b1015610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610d1f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461032f9190610d6e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610468576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561051357600080828154811061048d5761048c610da2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061050b90610dd1565b91505061046b565b50600067ffffffffffffffff81111561052f5761052e610e19565b5b60405190808252806020026020018201604052801561055d5781602001602082028036833780820191505090505b5060009080519060200190610573929190610a5a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161059a90610e79565b60006040518083038185875af1925050503d80600081146105d7576040519150601f19603f3d011682016040523d82523d6000602084013e6105dc565b606091505b5050905080610620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061790610eda565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061069757610696610da2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107d157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610787575b5050505050905060005b815181101561085c5760008282815181106107f9576107f8610da2565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061085490610dd1565b9150506107db565b50600067ffffffffffffffff81111561087857610877610e19565b5b6040519080825280602002602001820160405280156108a65781602001602082028036833780820191505090505b50600090805190602001906108bc929190610a5a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161090390610e79565b60006040518083038185875af1925050503d8060008114610940576040519150601f19603f3d011682016040523d82523d6000602084013e610945565b606091505b5050905080610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098090610eda565b60405180910390fd5b5050565b600080610999836109c9565b90506000670de0b6b3a764000085836109b29190610efa565b6109bc9190610f6b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3b9190611029565b5050509150506402540be40081610a5291906110a4565b915050919050565b828054828255906000526020600020908101928215610ad3579160200282015b82811115610ad25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a7a565b5b509050610ae09190610ae4565b5090565b5b80821115610afd576000816000905550600101610ae5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b3182610b06565b9050919050565b610b4181610b26565b8114610b4c57600080fd5b50565b600081359050610b5e81610b38565b92915050565b600060208284031215610b7a57610b79610b01565b5b6000610b8884828501610b4f565b91505092915050565b6000819050919050565b610ba481610b91565b82525050565b6000602082019050610bbf6000830184610b9b565b92915050565b6000819050919050565b6000610bea610be5610be084610b06565b610bc5565b610b06565b9050919050565b6000610bfc82610bcf565b9050919050565b6000610c0e82610bf1565b9050919050565b610c1e81610c03565b82525050565b6000602082019050610c396000830184610c15565b92915050565b610c4881610b26565b82525050565b6000602082019050610c636000830184610c3f565b92915050565b610c7281610b91565b8114610c7d57600080fd5b50565b600081359050610c8f81610c69565b92915050565b600060208284031215610cab57610caa610b01565b5b6000610cb984828501610c80565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610d09601383610cc2565b9150610d1482610cd3565b602082019050919050565b60006020820190508181036000830152610d3881610cfc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d7982610b91565b9150610d8483610b91565b9250828201905080821115610d9c57610d9b610d3f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ddc82610b91565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e0e57610e0d610d3f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e63600083610e48565b9150610e6e82610e53565b600082019050919050565b6000610e8482610e56565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ec4600b83610cc2565b9150610ecf82610e8e565b602082019050919050565b60006020820190508181036000830152610ef381610eb7565b9050919050565b6000610f0582610b91565b9150610f1083610b91565b9250828202610f1e81610b91565b91508282048414831517610f3557610f34610d3f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7682610b91565b9150610f8183610b91565b925082610f9157610f90610f3c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fbb81610f9c565b8114610fc657600080fd5b50565b600081519050610fd881610fb2565b92915050565b6000819050919050565b610ff181610fde565b8114610ffc57600080fd5b50565b60008151905061100e81610fe8565b92915050565b60008151905061102381610c69565b92915050565b600080600080600060a0868803121561104557611044610b01565b5b600061105388828901610fc9565b955050602061106488828901610fff565b945050604061107588828901611014565b935050606061108688828901611014565b925050608061109788828901610fc9565b9150509295509295909350565b60006110af82610fde565b91506110ba83610fde565b92508282026110c881610fde565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615611100576110ff610d3f565b5b828205841483151761111557611114610d3f565b5b509291505056fea2646970667358221220ee0027e09a13012c287dadaf240ef92425c717d767ecd8e3b6e61a36347083e664736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "this functions funds this contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}